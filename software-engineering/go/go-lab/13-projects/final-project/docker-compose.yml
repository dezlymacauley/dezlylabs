# ABOUT:

# This will start 3 services.
# PostgreSQL, Redis, Mailhod

# To use this file: 
# docker-compose up -d

# docker-compose is a convinient command that makes it easy to run 3 Docker
# containers

# This will download 3 Docker images:
# postgres 14.2, redis alpine, and mailhog/mailhog latest

# Postgres container → runs the database
# Redis container → runs the cache
# Mailhog container → runs the test SMTP server

# By default, Docker Compose creates a new network for each project 
# (based on the folder name or -p project flag).
#
# Every service in the docker-compose.yml file is automatically 
# attached to that network.
# Docker Compose automatically sets up DNS for the network, 
# so each container can reach another by service name (the keys under 
# services:).

#______________________________________________________________________________

# This tells Docker Compose which version of the Compose file format
version: '3'

# This is a heading to tell Docker you plan to start 
# multiple services (multiple Docker containers)
services:

#______________________________________________________________________________
#  SECTION: Start PostgreSQL service

  #  start Postgres, and ensure that data is stored to a mounted volume
  postgres:
    image: 'postgres:14.2'
    ports:
      - "127.0.0.1:5432:5432"
    # This tells Docker to always restart the container no matter what.
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: concurrency
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

#______________________________________________________________________________
#  SECTION: Start Redis service

      #  start Redis, and ensure that data is stored to a mounted volume
  redis:
    image: 'redis:alpine'
    ports:
      - "127.0.0.1:6379:6379"
    restart: always
    volumes:
      - ./db-data/redis/:/data

#______________________________________________________________________________
#  SECTION: Start Mailhog service

  #  `mailhog:` This is the hostname of the service.
  mailhog:
    # This will go to `https://hub.docker.com/r/mailhog/mailhog`
    # and download the latest Docker image for mailhog
    image: 'mailhog/mailhog:latest'
    ports:
      # hostPort:containerPort
      # This will make port `1025` on the Docker container accessible
      # on localhost (127.0.0.1), port 1025 on your machine.
      - "127.0.0.1:1025:1025"
      - "127.0.0.1:8025:8025"
    restart: always
#______________________________________________________________________________
